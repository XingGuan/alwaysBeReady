'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.test = exports.serialize = exports.default = void 0;
<<<<<<< HEAD

var _collections = require('../collections');

=======
var _collections = require('../collections');
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

<<<<<<< HEAD
/* eslint-disable local/ban-types-eventually */
const SPACE = ' ';
const OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap'];
const ARRAY_REGEXP = /^(HTML\w*Collection|NodeList)$/;

const testName = name =>
  OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);

=======
const SPACE = ' ';
const OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap'];
const ARRAY_REGEXP = /^(HTML\w*Collection|NodeList)$/;
const testName = name =>
  OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
const test = val =>
  val &&
  val.constructor &&
  !!val.constructor.name &&
  testName(val.constructor.name);
<<<<<<< HEAD

exports.test = test;

const isNamedNodeMap = collection =>
  collection.constructor.name === 'NamedNodeMap';

const serialize = (collection, config, indentation, depth, refs, printer) => {
  const name = collection.constructor.name;

  if (++depth > config.maxDepth) {
    return '[' + name + ']';
  }

  return (
    (config.min ? '' : name + SPACE) +
    (OBJECT_NAMES.indexOf(name) !== -1
      ? '{' +
        (0, _collections.printObjectProperties)(
=======
exports.test = test;
const isNamedNodeMap = collection =>
  collection.constructor.name === 'NamedNodeMap';
const serialize = (collection, config, indentation, depth, refs, printer) => {
  const name = collection.constructor.name;
  if (++depth > config.maxDepth) {
    return `[${name}]`;
  }
  return (
    (config.min ? '' : name + SPACE) +
    (OBJECT_NAMES.indexOf(name) !== -1
      ? `{${(0, _collections.printObjectProperties)(
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
          isNamedNodeMap(collection)
            ? Array.from(collection).reduce((props, attribute) => {
                props[attribute.name] = attribute.value;
                return props;
              }, {})
<<<<<<< HEAD
            : {...collection},
=======
            : {
                ...collection
              },
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
          config,
          indentation,
          depth,
          refs,
          printer
<<<<<<< HEAD
        ) +
        '}'
      : '[' +
        (0, _collections.printListItems)(
=======
        )}}`
      : `[${(0, _collections.printListItems)(
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
          Array.from(collection),
          config,
          indentation,
          depth,
          refs,
          printer
<<<<<<< HEAD
        ) +
        ']')
  );
};

=======
        )}]`)
  );
};
>>>>>>> 03a46568ea5603973661693851262b8d78658ea1
exports.serialize = serialize;
const plugin = {
  serialize,
  test
};
var _default = plugin;
exports.default = _default;
